# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""Capsule"""
type Capsule {
  id: ID!
  landLandings: Float!
  lastUpdate: String
  launches: [Launch!]!
  reuseCount: Int!
  serial: String!
  status: String!
  type: String!
  waterLandings: Float!
}

"""Company Info"""
type CompanyInfo {
  ceo: String
  coo: String
  cto: String
  ctoPropulsion: String
  employees: Int
  founded: Int
  founder: String
  headquarters: Headquarters!
  id: ID!
  launchSites: Int
  links: CompanyInfoLinks!
  name: String
  summary: String
  testSites: Int
  valuation: Float
  vehicles: Int
}

"""Company Info Links"""
type CompanyInfoLinks {
  elonTwitter: String
  flickr: String
  twitter: String
  website: String
}

"""Capsule"""
type Core {
  asdsAttempts: Float!
  asdsLandings: Float!
  block: String
  id: ID!
  lastUpdate: String
  launches: [Launch!]!
  reuseCount: Float!
  rtlsAttempts: Float!
  rtlsLandings: Float!
  serial: String!
  status: String!
}

"""Crew"""
type Crew {
  agency: String
  id: ID!
  image: String
  launches: [Launch!]!
  name: String
  status: String!
  wikipedia: String
}

"""Headquarters"""
type Headquarters {
  address: String
  city: String
  state: String
}

"""History"""
type History {
  details: String
  eventDateUnix: Int
  eventDateUtc: String
  id: ID!
  links: HistoryLinks!
  title: String
}

"""History Links"""
type HistoryLinks {
  article: String
}

"""Landpad"""
type Landpad {
  details: String
  fullName: String
  id: ID!
  images: LandpadImages
  landingAttempts: Int!
  landingSuccesses: Int!
  latitude: Float
  launches: [Launch!]!
  locality: String
  longitude: Float
  name: String
  region: String
  status: String!
  type: String
  wikipedia: String
}

"""Landpad Images"""
type LandpadImages {
  large: [String!]
}

"""Launch"""
type Launch {
  capsules: [Capsule!]!
  flightNumber: Int!
  id: ID!
  name: String!
  ships: [Ship!]!
}

type PaginatedCapsules {
  docs: [Capsule!]!
  hasNextPage: Boolean!
  hasPrevPage: Boolean!
  limit: Int!
  nextPage: Int
  offset: Int!
  page: Int!
  pagingCounter: Int!
  prevPage: Int
  totalDocs: Int!
  totalPages: Int!
}

type PaginatedCores {
  docs: [Core!]!
  hasNextPage: Boolean!
  hasPrevPage: Boolean!
  limit: Int!
  nextPage: Int
  offset: Int!
  page: Int!
  pagingCounter: Int!
  prevPage: Int
  totalDocs: Int!
  totalPages: Int!
}

type PaginatedCrew {
  docs: [Crew!]!
  hasNextPage: Boolean!
  hasPrevPage: Boolean!
  limit: Int!
  nextPage: Int
  offset: Int!
  page: Int!
  pagingCounter: Int!
  prevPage: Int
  totalDocs: Int!
  totalPages: Int!
}

type PaginatedHistory {
  docs: [History!]!
  hasNextPage: Boolean!
  hasPrevPage: Boolean!
  limit: Int!
  nextPage: Int
  offset: Int!
  page: Int!
  pagingCounter: Int!
  prevPage: Int
  totalDocs: Int!
  totalPages: Int!
}

type PaginatedLandpads {
  docs: [Landpad!]!
  hasNextPage: Boolean!
  hasPrevPage: Boolean!
  limit: Int!
  nextPage: Int
  offset: Int!
  page: Int!
  pagingCounter: Int!
  prevPage: Int
  totalDocs: Int!
  totalPages: Int!
}

type PaginatedShips {
  docs: [Ship!]!
  hasNextPage: Boolean!
  hasPrevPage: Boolean!
  limit: Int!
  nextPage: Int
  offset: Int!
  page: Int!
  pagingCounter: Int!
  prevPage: Int
  totalDocs: Int!
  totalPages: Int!
}

type PaginatedStarlinks {
  docs: [Starlink!]!
  hasNextPage: Boolean!
  hasPrevPage: Boolean!
  limit: Int!
  nextPage: Int
  offset: Int!
  page: Int!
  pagingCounter: Int!
  prevPage: Int
  totalDocs: Int!
  totalPages: Int!
}

type Query {
  """Get all capsules"""
  allCapsules: [Capsule!]!

  """Get all cores"""
  allCores: [Core!]!

  """Get all crew"""
  allCrew: [Crew!]!

  """Get all histories"""
  allHistories: [History!]!

  """Get all landpads"""
  allLandpads: [Landpad!]!

  """Get all launches"""
  allLaunches: [Launch!]!

  """Get all ships"""
  allShips: [Ship!]!

  """Get all starlinks"""
  allStarlinks: [Starlink!]!

  """Get one capsule"""
  capsule(id: String!): Capsule!

  """Query capsules"""
  capsules(input: QueryOptionsInput!): PaginatedCapsules!

  """Company info"""
  companyInfo: CompanyInfo!

  """Get one core"""
  core(id: String!): Core!

  """Query cores"""
  cores(input: QueryOptionsInput!): PaginatedCores!

  """Get one crew"""
  crew(id: String!): Crew!

  """Query crew"""
  crews(input: QueryOptionsInput!): PaginatedCrew!

  """Query histories"""
  histories(input: QueryOptionsInput!): PaginatedHistory!

  """Get one history"""
  history(id: String!): History!

  """Get one landpad"""
  landpad(id: String!): Landpad!

  """Query landpads"""
  landpads(input: QueryOptionsInput!): PaginatedLandpads!

  """Roadster info"""
  roadsterInfo: RoadsterInfo!

  """Get one ship"""
  ship(id: String!): Ship!

  """Query ships"""
  ships(input: QueryOptionsInput!): PaginatedShips!

  """Get one starlink"""
  starlink(id: String!): Starlink!

  """Query starlinks"""
  starlinks(input: QueryOptionsInput!): PaginatedStarlinks!
}

input QueryOptionsInput {
  limit: Int = 10
  offset: Int = 0
}

"""Roadster Info"""
type RoadsterInfo {
  apoapsisAu: Float
  details: String
  earthDistanceKm: Float
  earthDistanceMi: Float
  eccentricity: Float
  epochJd: Float
  flickrImages: [String!]!
  id: ID!
  inclination: Float
  launchDateUnix: Int
  launchDateUtc: String
  launchMassKg: Int
  launchMassLbs: Int
  longitude: Float
  marsDistanceKm: Float
  marsDistanceMi: Float
  name: String
  noradId: Int
  orbitType: String
  periapsisArg: Float
  periapsisAu: Float
  periodDays: Float
  semiMajorAxisAu: Float
  speedKph: Float
  speedMph: Float
  video: String
  wikipedia: String
}

"""Ship"""
type Ship {
  abs: Int
  active: Boolean!
  class: Int
  courseDeg: Float
  homePort: String
  id: ID!
  image: String
  imo: Int
  lastAisUpdate: String
  latitude: Float
  launches: [Launch!]!
  legacyId: String
  link: String
  longitude: Float
  massLbs: Int
  mmsi: Int
  model: String
  name: String!
  roles: [String!]!
  speedKn: Float
  status: String
  type: String
  yearBuilt: Int
}

"""Space Track"""
type SpaceTrack {
  APOAPSIS: Float
  ARG_OF_PERICENTER: Float
  BSTAR: Float
  CCSDS_OMM_VERS: String
  CENTER_NAME: String
  CLASSIFICATION_TYPE: String
  COMMENT: String
  COUNTRY_CODE: String
  CREATION_DATE: String
  DECAYED: Int
  DECAY_DATE: String
  ECCENTRICITY: Float
  ELEMENT_SET_NO: Int
  EPHEMERIS_TYPE: Int
  EPOCH: String
  FILE: Int
  GP_ID: Int
  INCLINATION: Float
  LAUNCH_DATE: String
  MEAN_ANOMALY: Float
  MEAN_ELEMENT_THEORY: String
  MEAN_MOTION: Float
  MEAN_MOTION_DDOT: Float
  MEAN_MOTION_DOT: Float
  NORAD_CAT_ID: Int
  OBJECT_ID: String
  OBJECT_NAME: String
  OBJECT_TYPE: String
  ORIGINATOR: String
  PERIAPSIS: Float
  PERIOD: Float
  RA_OF_ASC_NODE: Float
  RCS_SIZE: String
  REF_FRAME: String
  REV_AT_EPOCH: Int
  SEMIMAJOR_AXIS: Float
  SITE: String
  TIME_SYSTEM: String
  TLE_LINE0: String
  TLE_LINE1: String
  TLE_LINE2: String
}

"""Starlink"""
type Starlink {
  heightKm: Float
  id: ID!
  latitude: Float
  launch: Launch
  longitude: Float
  spaceTrack: SpaceTrack!
  velocityKms: Float
  version: String
}